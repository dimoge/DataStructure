/**
 * 树结构的学习
 *      概念： 定义：空二叉树的高度为-1，只有根节点的二叉树高度为0，根节点在0层，深度为0。
 *
 *  1、斜树
 *      只有左子树或者右子树的，应用较少
 *  2、满树
 *      所有节点都有左右子树，所有的叶子节点都同一层上
 *
 *  3、平衡树
 *      每个结点的左右子树的高度差小等于1，只须在计算二叉树高度时，同时判断左右子树的高度差即可。
 *      它是一棵空树或它的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树。平衡二叉树的常用实现方法有红黑树、AVL、替罪羊树、Treap、伸展树等。 最小二叉平衡树的节点的公式如下 F(n)=F(n-1)+F(n-2)+1 这个类似于一个递归的数列，可以参考Fibonacci数列，1是根节点，F(n-1)是左子树的节点数量，F(n-2)是右子树的节点数量。
 *
 *      ======树结构太难学了，先看看hash表吧。。。。 :(
 */


public class Tree{

}